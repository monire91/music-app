{"ast":null,"code":"import _slicedToArray from \"D:\\\\music-website\\\\server\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\music-website\\\\server\\\\client\\\\src\\\\components\\\\songs\\\\Images.js\";\n// import React, {Fragment, useState} from 'react';\n// import axios from 'axios'\n//\n// const FileUpload = () => {\n//     const [file, setFile] = useState();\n//     const [filename, setFilename] = useState('Choose file');\n//     const [uploadedFile, setUploadedFile] = useState({})\n//\n//     const handleChange = e => {\n//         setFile(e.target.files[0]);\n//         console.log(file)\n//         if (e.target.files[0]) {\n//             setFilename(e.target.files[0].name);\n//             console.log(filename)\n//         }\n//     };\n//     const handleClick = async e => {\n//         e.preventDefault();\n//         const formData = new FormData();\n//         formData.append('file', file)\n//\n//         console.log('data being sent:')\n//         console.log(formData)\n//\n//         try {\n//             const res = await axios.post('http://localhost:5000/api/upload', formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data'\n//                 }\n//             })\n//             const { fileName, filePath } = res.data\n//             setUploadedFile({ fileName, filePath })\n//             console.log('Uploaded successfully')\n//         }catch (err) {\n//             if (err.response.status === 500) {\n//                 console.log(\"there was a problem with the server 500\")\n//             } else {\n//                 console.log(err.response.data.message )\n//             }\n//         }\n//     }\n//\n//     return (\n//         <Fragment>\n//             <form onSubmit={handleClick}>\n//                 <div className=\"custom-file was-validated\">\n//                     <label className=\"custom-file-label\" htmlFor=\"validatedCustomFile\">{filename}</label>\n//                     <input\n//                         onChange={handleChange}\n//                         type=\"file\"\n//                         className=\"custom-file-input\"\n//                         id=\"validatedCustomFile\"\n//                         required\n//                     />\n//\n//                     <div className=\"invalid-feedback\">Pick and image which is jpeg or png and not bigger than 5mb</div>\n//                 </div>\n//                 <input type=\"submit\" value=\"Upload\" className=\"btn btn-primary btn-block mt-4\"/>\n//             </form>\n//             {uploadedFile ? (\n//                 <div className='row mt-5'>\n//                     <div className='col-md-6 m-auto'>\n//                         <h3 className='text-center'>{uploadedFile.fileName}</h3>\n//                         <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\n//                     </div>\n//                 </div>\n//             ) : null}\n//         </Fragment>\n//     );\n// };\n//\n// export default FileUpload;\nimport React, { Fragment, useState } from 'react';\nimport axios from 'axios';\n\nconst FileUpload = () => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        file = _useState2[0],\n        setFile = _useState2[1];\n\n  const _useState3 = useState('Choose file'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        filename = _useState4[0],\n        setFilename = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        uploadedFile = _useState6[0],\n        setUploadedFile = _useState6[1];\n\n  const handleChange = e => {\n    setFile(e.target.files[0]);\n    console.log(file);\n\n    if (e.target.files[0]) {\n      setFilename(e.target.files[0].name);\n      console.log(filename);\n    }\n  };\n\n  const handleClick = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const res = await axios.post('http://localhost:5000/api/images', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      const _res$data = res.data,\n            fileName = _res$data.fileName,\n            filePath = _res$data.filePath;\n      setUploadedFile({\n        fileName,\n        filePath\n      });\n      console.log('Uploaded successfully');\n    } catch (err) {\n      if (err.response.status === 500) {\n        console.log(\"there was a problem with the server 500\");\n      } else {\n        console.log(err.response.data.message);\n      }\n    }\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"custom-file was-validated\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"custom-file-label\",\n    htmlFor: \"validatedCustomFile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, filename), React.createElement(\"input\", {\n    onChange: handleChange,\n    type: \"file\",\n    className: \"custom-file-input\",\n    id: \"validatedCustomFile\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"invalid-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Pick and image which is jpeg or png and not bigger than 5mb\")), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Upload\",\n    className: \"btn btn-primary btn-block mt-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })), uploadedFile ? React.createElement(\"div\", {\n    className: \"row mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6 m-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, uploadedFile.fileName), React.createElement(\"img\", {\n    style: {\n      width: '100%'\n    },\n    src: uploadedFile.filePath,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }))) : null);\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["D:/music-website/server/client/src/components/songs/Images.js"],"names":["React","Fragment","useState","axios","FileUpload","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","handleChange","e","target","files","console","log","name","handleClick","preventDefault","formData","FormData","append","res","post","headers","data","fileName","filePath","err","response","status","message","width"],"mappings":"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","sourcesContent":["// import React, {Fragment, useState} from 'react';\r\n// import axios from 'axios'\r\n//\r\n// const FileUpload = () => {\r\n//     const [file, setFile] = useState();\r\n//     const [filename, setFilename] = useState('Choose file');\r\n//     const [uploadedFile, setUploadedFile] = useState({})\r\n//\r\n//     const handleChange = e => {\r\n//         setFile(e.target.files[0]);\r\n//         console.log(file)\r\n//         if (e.target.files[0]) {\r\n//             setFilename(e.target.files[0].name);\r\n//             console.log(filename)\r\n//         }\r\n//     };\r\n//     const handleClick = async e => {\r\n//         e.preventDefault();\r\n//         const formData = new FormData();\r\n//         formData.append('file', file)\r\n//\r\n//         console.log('data being sent:')\r\n//         console.log(formData)\r\n//\r\n//         try {\r\n//             const res = await axios.post('http://localhost:5000/api/upload', formData, {\r\n//                 headers: {\r\n//                     'Content-Type': 'multipart/form-data'\r\n//                 }\r\n//             })\r\n//             const { fileName, filePath } = res.data\r\n//             setUploadedFile({ fileName, filePath })\r\n//             console.log('Uploaded successfully')\r\n//         }catch (err) {\r\n//             if (err.response.status === 500) {\r\n//                 console.log(\"there was a problem with the server 500\")\r\n//             } else {\r\n//                 console.log(err.response.data.message )\r\n//             }\r\n//         }\r\n//     }\r\n//\r\n//     return (\r\n//         <Fragment>\r\n//             <form onSubmit={handleClick}>\r\n//                 <div className=\"custom-file was-validated\">\r\n//                     <label className=\"custom-file-label\" htmlFor=\"validatedCustomFile\">{filename}</label>\r\n//                     <input\r\n//                         onChange={handleChange}\r\n//                         type=\"file\"\r\n//                         className=\"custom-file-input\"\r\n//                         id=\"validatedCustomFile\"\r\n//                         required\r\n//                     />\r\n//\r\n//                     <div className=\"invalid-feedback\">Pick and image which is jpeg or png and not bigger than 5mb</div>\r\n//                 </div>\r\n//                 <input type=\"submit\" value=\"Upload\" className=\"btn btn-primary btn-block mt-4\"/>\r\n//             </form>\r\n//             {uploadedFile ? (\r\n//                 <div className='row mt-5'>\r\n//                     <div className='col-md-6 m-auto'>\r\n//                         <h3 className='text-center'>{uploadedFile.fileName}</h3>\r\n//                         <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\r\n//                     </div>\r\n//                 </div>\r\n//             ) : null}\r\n//         </Fragment>\r\n//     );\r\n// };\r\n//\r\n// export default FileUpload;\r\n\r\n\r\nimport React, {Fragment, useState} from 'react';\r\nimport axios from 'axios'\r\n\r\nconst FileUpload = () => {\r\n    const [file, setFile] = useState();\r\n    const [filename, setFilename] = useState('Choose file');\r\n    const [uploadedFile, setUploadedFile] = useState({})\r\n\r\n    const handleChange = e => {\r\n        setFile(e.target.files[0]);\r\n        console.log(file)\r\n        if (e.target.files[0]) {\r\n            setFilename(e.target.files[0].name);\r\n            console.log(filename)\r\n        }\r\n    };\r\n    const handleClick = async e => {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append('file', file)\r\n\r\n        try {\r\n            const res = await axios.post('http://localhost:5000/api/images', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n            const { fileName, filePath } = res.data\r\n            setUploadedFile({ fileName, filePath })\r\n            console.log('Uploaded successfully')\r\n        }catch (err) {\r\n            if (err.response.status === 500) {\r\n                console.log(\"there was a problem with the server 500\")\r\n            } else {\r\n                console.log(err.response.data.message )\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <form onSubmit={handleClick}>\r\n                <div className=\"custom-file was-validated\">\r\n                    <label className=\"custom-file-label\" htmlFor=\"validatedCustomFile\">{filename}</label>\r\n                    <input\r\n                        onChange={handleChange}\r\n                        type=\"file\"\r\n                        className=\"custom-file-input\"\r\n                        id=\"validatedCustomFile\"\r\n                        required\r\n                    />\r\n\r\n                    <div className=\"invalid-feedback\">Pick and image which is jpeg or png and not bigger than 5mb</div>\r\n                </div>\r\n                <input type=\"submit\" value=\"Upload\" className=\"btn btn-primary btn-block mt-4\"/>\r\n            </form>\r\n            {uploadedFile ? (\r\n                <div className='row mt-5'>\r\n                    <div className='col-md-6 m-auto'>\r\n                        <h3 className='text-center'>{uploadedFile.fileName}</h3>\r\n                        <img style={{ width: '100%' }} src={uploadedFile.filePath} alt='' />\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}